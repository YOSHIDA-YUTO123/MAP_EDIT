//================================================
//
// 状態パターン基盤 [statebase.cpp]
// Author: YUTO YOSHIDA
//
//================================================

//************************************************
// インクルードファイル
//************************************************
#include "statebase.h"

using namespace std; // 名前空間stdを使用

//================================================
// コンストラクタ
//================================================
CStateBase::CStateBase()
{
}

//================================================
// デストラクタ
//================================================
CStateBase::~CStateBase()
{
}

//================================================
// コンストラクタ
//================================================
CStateMachine::CStateMachine()
{
}

//================================================
// デストラクタ
//================================================
CStateMachine::~CStateMachine()
{
}

//================================================
// 状態の変更
//================================================
void CStateMachine::Change(shared_ptr<CStateBase> pNewState)
{
	if (m_pNowState != nullptr)
	{
		// 状態が同じなら
		if (m_pNowState->GetID() == pNewState->GetID())
		{
			// 破棄
			pNewState.reset();
			return;
		}
	}

	// 今の状態を生成
	if (m_pNowState != nullptr)
	{
		m_pNowState->Uninit();
		m_pNowState.reset();
		m_pNowState = nullptr;
	}

	// 状態の設定
	m_pNowState = pNewState;

	m_pNowState->Init();
}

//================================================
// 状態の更新処理
//================================================
void CStateMachine::Update(void)
{
	// 更新処理
	if (m_pNowState != nullptr)
	{
		m_pNowState->Update();
	}
}